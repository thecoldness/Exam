#include<cstdio>
#include<cctype>
#include<climits>
#include<algorithm>
using namespace std;
typedef long long ll;
inline int read()
{
	int res = 0;
	char c;
	bool flag = true;
	c = getchar();
	while(!isdigit(c))
	{
		flag = (c != '-');
		c = getchar();
	}
	while(isdigit(c))
	{
		res = res * 10 + (c ^ 48);
		c = getchar();
	}
	return flag ? res : -res;
}
const int Max_n = 2e6 + 5;
ll tmp , ans = LLONG_MAX >> 1;
int change[Max_n] , a[Max_n] , n;
inline int aabs(int x)
{
	return max(x , -x);
}
int main()
{
	n = read();
	for(int i = 1 ; i <= n ; ++ i)
	{
		a[i] = read();
		if(a[i] > i)
		{
			++ change[2] , -- change[i + 1];
			if(i + 2 <= n)	-- change[i + 2] , ++ change[i + n - a[i] + 2];
			if(i + n - a[i] + 2 <= n)	++ change[i + n - a[i] + 2] , -- change[n + 1];
		}
		else if(a[i] < i)
		{
			-- change[2] , ++ change[i + 2 - a[i]];//i to a[i]
			if(a[i] > 1)	++ change[i - a[i] + 2] , -- change[i + 1];//a[i] to 1
			-- change[i + 2] , ++ change[n + 1];// n to a[i] - 1
		}
		else
		{
			++ change[2] , -- change[i + 1];
			-- change[i + 2] , ++ change[n + 1];
		}
		tmp += aabs(i - a[i]);
	}
	ans = tmp;
	for(int i = 1 ; i <= n ; ++ i)
		change[i] += change[i - 1];
	for(int i = 2 ; i <= n ; ++ i)
	{
		tmp += change[i];
		tmp -= aabs(a[i - 1] - 1) , tmp += aabs(a[i - 1] - n);
		ans = min(ans , tmp);
	}
	printf("%lld" , ans);
	return 0;
}
